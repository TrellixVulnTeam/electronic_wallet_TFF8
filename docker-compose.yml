#version: "3"
#
#services:
#  db:
#    # Please ensure the postgres-client's major version in the backend image is kept in
#    # sync with this major version so pg_dump remains compatible.
#    image: postgres:11.3
#    environment:
#      - POSTGRES_USER=${DATABASE_USER:-stockcnn}
#      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-stockcnn}
#      - POSTGRES_DB=${DATABASE_NAME:-stockcnn}
#    networks:
#      local:
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#
#  redis:
#    image: redis:6.0
#    networks:
#      local:
#
#  mjml:
#    image: liminspace/mjml-tcpserver:0.10
#    # mjml is based off the node image which creates a non root node user we can run as
#    user: "1000:1000"
#    networks:
#      local:
#
#  backend:
#    build:
#      dockerfile: ./dockerfiles/Dockerfile
#      context: .
#    image: stockcnn_backend:latest
#    environment:
#      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://127.0.0.1:8000}
#      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
#      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-true}
#      - DATABASE_USER=${DATABASE_USER:-stockcnn}
#      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-stockcnn}
#      - DATABASE_NAME=${DATABASE_NAME:-stockcnn}
#      - DATABASE_HOST=${DATABASE_HOST:-db}
#      - ADDITIONAL_APPS
#      - EMAIL_SMTP
#      - EMAIL_SMTP_HOST
#      - EMAIL_SMTP_PORT
#      - EMAIL_SMTP_USE_TLS
#      - EMAIL_SMTP_USER
#      - EMAIL_SMTP_PASSWORD
#      - FROM_EMAIL
#    ports:
#      - "${HOST_PUBLISH_IP:-127.0.0.1}:${BACKEND_PORT:-8000}:80"
#    depends_on:
#      - db
#      - redis
#      - mjml
#    networks:
#      local:
#
#  celery:
#    image: stockcnn_backend:latest
#    environment:
#      - ADDITIONAL_APPS
#      - EMAIL_SMTP
#      - EMAIL_SMTP_HOST
#      - EMAIL_SMTP_PORT
#      - EMAIL_SMTP_USE_TLS
#      - EMAIL_SMTP_USER
#      - EMAIL_SMTP_PASSWORD
#      - FROM_EMAIL
#    build:
#      dockerfile: ./backend/Dockerfile
#      context: .
#    command: celery worker -l INFO -Q celery
#    depends_on:
#      - backend
#    networks:
#      local:
#
#  celery-export-worker:
#    image: stockcnn_backend:latest
#    build:
#      dockerfile: ./dockerfiles/Dockerfile
#      context: .
#    command: celery worker -l INFO -Q export
#    depends_on:
#      - backend
#    environment:
#      - ADDITIONAL_APPS
#      - EMAIL_SMTP
#      - EMAIL_SMTP_HOST
#      - EMAIL_SMTP_PORT
#      - EMAIL_SMPT_USE_TLS
#      - EMAIL_SMTP_USER
#      - EMAIL_SMTP_PASSWORD
#      - FROM_EMAIL
#    networks:
#      local:
#
#  celery-beat-worker:
#    image: stockcnn_backend:latest
#    build:
#      dockerfile: ./dockerfiles/Dockerfile
#      context: .
#    command: celery beat -l INFO -S redbeat.RedBeatScheduler
#    depends_on:
#      - backend
#    environment:
#      - ADDITIONAL_APPS
#      - EMAIL_SMTP
#      - EMAIL_SMTP_HOST
#      - EMAIL_SMTP_PORT
#      - EMAIL_SMTP_USE_TLS
#      - EMAIL_SMTP_USER
#      - EMAIL_SMTP_PASSWORD
#      - FROM_EMAIL
#    networks:
#      local:
#
#
#volumes:
#  pgdata:
#
#networks:
#  local:
#    driver: bridge
version: "3.9"

services:

  redis-server:
    image: "redis:${REDIS_VERSION}"
    restart: always
    volumes:
      - ./redis-server:/data/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6378:6378'
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  db:
    env_file:
      - ./.env
    image: "mysql:${MYSQL_VERSION}"
    container_name: electronic_wallet_db
    environment:
      - MYSQL_TCP_PORT=${MYSQL_TCP_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_NAME=${MYSQL_NAME}
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
    ports:
      - 3308:3308
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci']

  web:
    build: .
    volumes:
      - .:/code
    ports:
      - 8002:8002
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    depends_on:
      - db
      - redis-server
    command:  python manage.py runserver 0.0.0.0:8002

  celery:
    build:
       context: .
    container_name: electronic_wallet
    command: celery -A celery worker --loglevel=info
    volumes:
       - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - redis-server

networks:
  default:
    external:
      name: ecommerce